<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
		

	<!-- Configuring RoleVoter bean to use custom access roles, by default roles 
		should be in the form ROLE_{XXX} -->
		
<beans:bean id="appProperties1"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <beans:property name="locations">
        <beans:list>
            <beans:value>classpath:database.properties</beans:value>
        </beans:list>
    </beans:property>
</beans:bean>
		
		
	<beans:bean id="roleVoter"
		class="org.springframework.security.access.vote.RoleVoter">
		<beans:property name="rolePrefix" value=""></beans:property>
	</beans:bean>

	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:constructor-arg name="decisionVoters"
			ref="roleVoter" />
	</beans:bean>
<http pattern="/html/**" security="none" />
	<http  authentication-manager-ref="jdbc-auth"
		access-decision-manager-ref="accessDecisionManager">	
	
		<intercept-url pattern="/login" access="ROLE_ANONYMOUS,Admin" />
		<intercept-url pattern="/denied" access="ROLE_ANONYMOUS,Admin" />
		<intercept-url pattern="/**" access="Admin" />
		<form-login login-page="/login" authentication-failure-url="/denied"
			username-parameter="username" password-parameter="password"
			default-target-url="/home" />
		<logout invalidate-session="true" logout-success-url="/login"
			logout-url="/j_spring_security_logout" />
		<access-denied-handler error-page="/denied"/>
		<session-management invalid-session-url="/login">
			<concurrency-control max-sessions="1"
				expired-url="/login" />
		</session-management>
	</http>


	<authentication-manager id="dao-auth">
		<authentication-provider user-service-ref="userDetailsService">
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="userDetailsService"
		class="com.vishwayan.spring.security.dao.AppUserDetailsServiceDAO" />

	<authentication-manager id="jdbc-auth">
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT  username, password,1 FROM usermaster where username = ?"
				authorities-by-username-query="select username,'Admin' as role from usermaster where username = ?" />
		</authentication-provider>
	</authentication-manager>



	<!-- MySQL DB DataSource -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<beans:property name="driverClassName" value="${DB_DRIVER_CLASS}" />
		<beans:property name="url"
			value="${DB_URL}" />
		<beans:property name="username" value="${DB_USERNAME}" />
		<beans:property name="password" value="${DB_PASSWORD}" />
	</beans:bean>


  <beans:bean id="CustomAuthenticationSuccessHandler" class="com.vishwayan.spring.CustomAuthenticationSuccessHandler">  
  <beans:property name="jdbcTemplate" ref="jdbcTemplate"></beans:property>  
  </beans:bean> 
	
  <beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
  <beans:property name="dataSource" ref="dataSource"></beans:property>  
  </beans:bean> 
</beans:beans>
